@echo off
REM Script d'initialisation du projet apr√®s l'utilisation du template

REM Couleurs pour les messages (Windows)
set "RED=[91m"
set "GREEN=[92m"
set "YELLOW=[93m"
set "BLUE=[94m"
set "NC=[0m"

REM Fonctions utilitaires
:print_header
echo %BLUE%===================================================================%NC%
echo %BLUE% %~1 %NC%
echo %BLUE%===================================================================%NC%
goto :EOF

:print_success
echo %GREEN%‚úì %~1%NC%
goto :EOF

:print_warning
echo %YELLOW%‚ö† %~1%NC%
goto :EOF

:print_error
echo %RED%‚úó %~1%NC%
goto :EOF

REM V√©rifier si git est disponible
where git >nul 2>nul
if %ERRORLEVEL% NEQ 0 (
    call :print_error "Git n'est pas install√©. Veuillez l'installer pour continuer."
    exit /b 1
)

REM D√©tecter le nom du projet √† partir du dossier racine
for %%I in (.) do set "PROJECT_NAME=%%~nxI"

REM Si le nom du projet est toujours yeb_app_template, demander √† l'utilisateur de le personnaliser
if "%PROJECT_NAME%"=="yeb_app_template" (
    call :print_warning "Le nom du dossier racine est encore 'yeb_app_template'."
    set /p "CUSTOM_NAME=Entrez un nom personnalis√© pour votre projet (sans espaces ni caract√®res sp√©ciaux) : "
    if not "%CUSTOM_NAME%"=="" (
        set "PROJECT_NAME=%CUSTOM_NAME%"
    )
)

call :print_header "Initialisation du projet '%PROJECT_NAME%'"
echo Ce script va personnaliser le template pour votre projet.

REM Cr√©er un fichier de configuration central pour le nom du projet
echo Cr√©ation du fichier de configuration du projet...
if not exist ".project_config" mkdir .project_config

REM Version Windows
echo @echo off > .project_config\project_info.bat
echo REM Informations sur le projet - g√©n√©r√©es automatiquement >> .project_config\project_info.bat
echo set PROJECT_NAME=%PROJECT_NAME% >> .project_config\project_info.bat
echo set PROJECT_CREATED_DATE=%date% >> .project_config\project_info.bat

REM Version Bash (pour WSL ou Git Bash)
echo #!/bin/bash > .project_config\project_info.sh
echo # Informations sur le projet - g√©n√©r√©es automatiquement >> .project_config\project_info.sh
echo PROJECT_NAME="%PROJECT_NAME%" >> .project_config\project_info.sh
echo PROJECT_CREATED_DATE="%date%" >> .project_config\project_info.sh

REM Cr√©ation d'un fichier Dart pour les constantes du projet
if not exist "flutter_app\lib\config" mkdir flutter_app\lib\config
echo // Fichier g√©n√©r√© automatiquement - Contient les informations de base du projet > flutter_app\lib\config\project_config.dart
echo class ProjectConfig { >> flutter_app\lib\config\project_config.dart
echo   static const String projectName = '%PROJECT_NAME%'; >> flutter_app\lib\config\project_config.dart
echo   static const String projectCreatedDate = '%date%'; >> flutter_app\lib\config\project_config.dart
echo } >> flutter_app\lib\config\project_config.dart

call :print_success "Fichier de configuration cr√©√© avec le nom du projet : %PROJECT_NAME%"

REM Renommer le fichier .code-workspace et mettre √† jour les fichiers cl√©s
call :print_header "Mise √† jour du projet avec le nouveau nom"

REM V√©rifier si le fichier code-workspace existe
if exist "yeb_app_template.code-workspace" (
    echo Renommage du fichier code-workspace...
    copy "yeb_app_template.code-workspace" "%PROJECT_NAME%.code-workspace" > nul
    del "yeb_app_template.code-workspace"
    
    REM Remplacer le contenu du fichier
    powershell -Command "(Get-Content '%PROJECT_NAME%.code-workspace') -replace 'yeb_app_template', '%PROJECT_NAME%' | Set-Content '%PROJECT_NAME%.code-workspace'"
    call :print_success "Fichier code-workspace renomm√© en %PROJECT_NAME%.code-workspace"
) else (
    call :print_warning "Fichier code-workspace non trouv√©"
)

REM Mettre √† jour le fichier pubspec.yaml
if exist "pubspec.yaml" (
    echo Mise √† jour du nom du package dans pubspec.yaml...
    powershell -Command "(Get-Content 'pubspec.yaml') -replace '^name: yeb_app_template', 'name: %PROJECT_NAME%' | Set-Content 'pubspec.yaml'"
    call :print_success "Nom du package mis √† jour dans pubspec.yaml"
)

REM Mettre √† jour tous les imports dans le code
echo Mise √† jour des imports dans les fichiers Dart...
powershell -Command "Get-ChildItem -Path . -Include *.dart -Recurse | ForEach-Object { (Get-Content $_.FullName) -replace 'package:yeb_app_template/', 'package:%PROJECT_NAME%/' | Set-Content $_.FullName }"
call :print_success "Imports mis √† jour dans les fichiers Dart"

REM Mettre √† jour les fichiers web
if exist "flutter_app\web\index.html" (
    echo Mise √† jour du fichier index.html...
    powershell -Command "(Get-Content 'flutter_app\web\index.html') -replace 'content=""Application yeb_app_template', 'content=""Application %PROJECT_NAME%' | Set-Content 'flutter_app\web\index.html'"
    powershell -Command "(Get-Content 'flutter_app\web\index.html') -replace 'content=""yeb_app_template""', 'content=""%PROJECT_NAME%""' | Set-Content 'flutter_app\web\index.html'"
    powershell -Command "(Get-Content 'flutter_app\web\index.html') -replace '<title>yeb_app_template<', '<title>%PROJECT_NAME%<' | Set-Content 'flutter_app\web\index.html'"
    call :print_success "Fichier index.html mis √† jour"
)

call :print_success "Renommage termin√©"

REM Ne pas mettre √† jour le pubspec.yaml pour Flutter avec le nom du projet
if exist "flutter_app\pubspec.yaml" (
    echo V√©rification du pubspec.yaml...
    call :print_success "pubspec.yaml laiss√© inchang√©, comme demand√©"
)

REM Installer les d√©pendances
call :print_header "Installation des d√©pendances"

REM Ex√©cuter le script d'installation Windows
if exist "scripts\setup.bat" (
    echo Ex√©cution de scripts\setup.bat...
    call scripts\setup.bat
    call :print_success "Configuration Windows termin√©e"
) else (
    call :print_error "Le script setup.bat n'a pas √©t√© trouv√©"
)

REM Installation des d√©pendances Flutter
where flutter >nul 2>nul
if %ERRORLEVEL% EQU 0 (
    echo Installation des d√©pendances Flutter...
    pushd flutter_app
    flutter pub get
    popd
    call :print_success "D√©pendances Flutter install√©es"
) else (
    call :print_warning "Flutter non trouv√© dans le PATH. Veuillez l'installer manuellement."
)

REM Installation des d√©pendances Python si Poetry est install√©
where poetry >nul 2>nul
if %ERRORLEVEL% EQU 0 (
    echo Installation des d√©pendances Python pour le backend local...
    pushd python_backend
    poetry install
    popd
    echo Installation des d√©pendances Python pour le backend web...
    pushd web_backend
    poetry install
    popd
    call :print_success "D√©pendances Python install√©es"
) else (
    call :print_warning "Poetry non trouv√©. Veuillez installer Poetry et ex√©cuter manuellement 'poetry install' dans les dossiers python_backend et web_backend."
)

REM Pr√©paration du premier commit Git
call :print_header "Configuration Git"
if exist ".git" (
    echo Pr√©paration du premier commit...
    git add .
    git commit -m "üöÄ Initialisation du projet %PROJECT_NAME% √† partir du template yeb_app_template"
    call :print_success "Premier commit cr√©√©"
) else (
    call :print_warning "Ce dossier n'est pas un d√©p√¥t Git. Veuillez initialiser Git manuellement."
)

REM Instructions finales
call :print_header "Projet initialis√© avec succ√®s !"
echo Votre projet '%PROJECT_NAME%' est maintenant configur√© et pr√™t √† l'emploi.
echo.
echo Prochaines √©tapes recommand√©es :
echo 1. Consultez la documentation dans le dossier 'docs/' pour plus d'informations
echo 2. Lancez votre application en d√©veloppement avec 'run_dev.bat'
echo 3. Pour le d√©veloppement web, utilisez 'start_web_dev.bat'
echo.
echo Si vous utilisez VS Code avec GitHub Copilot, demandez √† l'assistant de 'lire la documentation dans docs/' pour vous aider √† personnaliser davantage votre projet.
echo.
call :print_success "Bon d√©veloppement !"
